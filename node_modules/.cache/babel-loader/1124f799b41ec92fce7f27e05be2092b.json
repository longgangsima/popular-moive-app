{"ast":null,"code":"// for action creator\nimport { LOAD_NEXT_PAGE_FROM_DB, ADD_TO_FAVORITE, REMOVE_FROM_FAVORITE, ADD_TO_BLOCK, REMOVE_FROM_BLOCK, URL_DISCOVER_PREFIX, API_KEY_SUGUO } from \"../constants\";\nimport axios from \"axios\";\n\nconst loadNextPageFromDBSynch = singlePageMovieList => ({\n  type: LOAD_NEXT_PAGE_FROM_DB,\n  data: singlePageMovieList\n});\n\nexport const loadNextPageFromDB = page => {\n  return dispatch => {\n    // send ajax to movieDB\n    const url = URL_DISCOVER_PREFIX + \"/discover/movie?api_key=\" + API_KEY_SUGUO + \"&sort_by=popularity.desc&&include_adult=false&include_video=false&page=\" + page;\n    axios.get(url).then(function (response) {\n      const nextPageMovieList = response.data.results; // console.log(\"response\", response.data);\n\n      for (let i = 0; i < nextPageMovieList.length; i++) {\n        nextPageMovieList[i].isFavorite = false;\n        nextPageMovieList[i].isBlock = false;\n        nextPageMovieList[i].page = page;\n        nextPageMovieList[i].index = i;\n      }\n\n      dispatch(loadNextPageFromDBSynch(nextPageMovieList));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport const addToFavorite = (page, index) => ({\n  type: ADD_TO_FAVORITE,\n  data: {\n    page: page,\n    index: index\n  }\n});\nexport const removeFromFavorite = (page, index) => ({\n  type: REMOVE_FROM_FAVORITE,\n  data: {\n    page: page,\n    index: index\n  }\n});\nexport const addToBlock = (page, index) => ({\n  type: ADD_TO_BLOCK,\n  data: {\n    page: page,\n    index: index\n  }\n});\nexport const removeFromBlock = (page, index) => ({\n  type: REMOVE_FROM_BLOCK,\n  data: {\n    page: page,\n    index: index\n  }\n});","map":{"version":3,"sources":["/Users/suguo/Desktop/suguo_hw4/popular-moive-app/src/redux/actions.js"],"names":["LOAD_NEXT_PAGE_FROM_DB","ADD_TO_FAVORITE","REMOVE_FROM_FAVORITE","ADD_TO_BLOCK","REMOVE_FROM_BLOCK","URL_DISCOVER_PREFIX","API_KEY_SUGUO","axios","loadNextPageFromDBSynch","singlePageMovieList","type","data","loadNextPageFromDB","page","dispatch","url","get","then","response","nextPageMovieList","results","i","length","isFavorite","isBlock","index","catch","error","console","log","addToFavorite","removeFromFavorite","addToBlock","removeFromBlock"],"mappings":"AAAA;AACA,SAAQA,sBAAR,EAAgCC,eAAhC,EAAiDC,oBAAjD,EAAuEC,YAAvE,EAAqFC,iBAArF,EACIC,mBADJ,EACyBC,aADzB,QAC6C,cAD7C;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,uBAAuB,GAAIC,mBAAD,KAA0B;AACtDC,EAAAA,IAAI,EAAEV,sBADgD;AAEtDW,EAAAA,IAAI,EAAEF;AAFgD,CAA1B,CAAhC;;AAKA,OAAO,MAAMG,kBAAkB,GAAIC,IAAD,IAAU;AACxC,SAAQC,QAAD,IAAc;AACjB;AACA,UAAMC,GAAG,GAAGV,mBAAmB,GAAG,0BAAtB,GAAmDC,aAAnD,GACV,yEADU,GACkEO,IAD9E;AAEAN,IAAAA,KAAK,CAACS,GAAN,CAAUD,GAAV,EACCE,IADD,CACM,UAAUC,QAAV,EAAoB;AACtB,YAAMC,iBAAiB,GAAGD,QAAQ,CAACP,IAAT,CAAcS,OAAxC,CADsB,CAEtB;;AACA,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAgBA,CAAC,GAAGF,iBAAiB,CAACG,MAAtC,EAA8CD,CAAC,EAA/C,EAAmD;AAC/CF,QAAAA,iBAAiB,CAACE,CAAD,CAAjB,CAAqBE,UAArB,GAAkC,KAAlC;AACAJ,QAAAA,iBAAiB,CAACE,CAAD,CAAjB,CAAqBG,OAArB,GAA+B,KAA/B;AACAL,QAAAA,iBAAiB,CAACE,CAAD,CAAjB,CAAqBR,IAArB,GAA4BA,IAA5B;AACAM,QAAAA,iBAAiB,CAACE,CAAD,CAAjB,CAAqBI,KAArB,GAA6BJ,CAA7B;AACH;;AACDP,MAAAA,QAAQ,CAACN,uBAAuB,CAACW,iBAAD,CAAxB,CAAR;AACH,KAXD,EAYCO,KAZD,CAYO,UAAUC,KAAV,EAAiB;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,KAdD;AAeH,GAnBD;AAoBH,CArBM;AAuBP,OAAO,MAAMG,aAAa,GAAG,CAACjB,IAAD,EAAOY,KAAP,MAAkB;AAC3Cf,EAAAA,IAAI,EAAET,eADqC;AAE3CU,EAAAA,IAAI,EAAE;AAACE,IAAAA,IAAI,EAACA,IAAN;AAAYY,IAAAA,KAAK,EAACA;AAAlB;AAFqC,CAAlB,CAAtB;AAKP,OAAO,MAAMM,kBAAkB,GAAG,CAAClB,IAAD,EAAOY,KAAP,MAAkB;AAChDf,EAAAA,IAAI,EAAER,oBAD0C;AAEhDS,EAAAA,IAAI,EAAE;AAACE,IAAAA,IAAI,EAACA,IAAN;AAAYY,IAAAA,KAAK,EAACA;AAAlB;AAF0C,CAAlB,CAA3B;AAKP,OAAO,MAAMO,UAAU,GAAG,CAACnB,IAAD,EAAOY,KAAP,MAAkB;AACxCf,EAAAA,IAAI,EAAEP,YADkC;AAExCQ,EAAAA,IAAI,EAAE;AAACE,IAAAA,IAAI,EAACA,IAAN;AAAYY,IAAAA,KAAK,EAACA;AAAlB;AAFkC,CAAlB,CAAnB;AAKP,OAAO,MAAMQ,eAAe,GAAG,CAACpB,IAAD,EAAOY,KAAP,MAAkB;AAC7Cf,EAAAA,IAAI,EAAEN,iBADuC;AAE7CO,EAAAA,IAAI,EAAE;AAACE,IAAAA,IAAI,EAACA,IAAN;AAAYY,IAAAA,KAAK,EAACA;AAAlB;AAFuC,CAAlB,CAAxB","sourcesContent":["// for action creator\nimport {LOAD_NEXT_PAGE_FROM_DB, ADD_TO_FAVORITE, REMOVE_FROM_FAVORITE, ADD_TO_BLOCK, REMOVE_FROM_BLOCK,\n    URL_DISCOVER_PREFIX, API_KEY_SUGUO} from \"../constants\";\nimport axios from \"axios\";\n\nconst loadNextPageFromDBSynch = (singlePageMovieList) => ({\n    type: LOAD_NEXT_PAGE_FROM_DB,\n    data: singlePageMovieList,\n});\n\nexport const loadNextPageFromDB = (page) => {\n    return (dispatch) => {\n        // send ajax to movieDB\n        const url = URL_DISCOVER_PREFIX + \"/discover/movie?api_key=\" + API_KEY_SUGUO \n        + \"&sort_by=popularity.desc&&include_adult=false&include_video=false&page=\" + page;\n        axios.get(url)\n        .then(function (response) {\n            const nextPageMovieList = response.data.results;\n            // console.log(\"response\", response.data);\n            for(let i = 0 ; i < nextPageMovieList.length; i++) {\n                nextPageMovieList[i].isFavorite = false;\n                nextPageMovieList[i].isBlock = false;\n                nextPageMovieList[i].page = page;\n                nextPageMovieList[i].index = i;\n            }\n            dispatch(loadNextPageFromDBSynch(nextPageMovieList));\n        })\n        .catch(function (error) {\n            console.log(error);\n        });\n    }\n}\n\nexport const addToFavorite = (page, index) => ({\n    type: ADD_TO_FAVORITE,\n    data: {page:page, index:index},\n});\n\nexport const removeFromFavorite = (page, index) => ({\n    type: REMOVE_FROM_FAVORITE,\n    data: {page:page, index:index},\n});\n\nexport const addToBlock = (page, index) => ({\n    type: ADD_TO_BLOCK,\n    data: {page:page, index:index},\n});\n\nexport const removeFromBlock = (page, index) => ({\n    type: REMOVE_FROM_BLOCK,\n    data: {page:page, index:index},\n});\n"]},"metadata":{},"sourceType":"module"}