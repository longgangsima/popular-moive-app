{"ast":null,"code":"var _jsxFileName = \"/Users/qingyunwu/su_movielist/popular-moive-app/src/view/favorite-tab/favorite-tab.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { loadNextPageFromDB } from \"../../redux/actions\";\nimport { URL_IMAGE_PREFIX } from \"../../constants\";\nimport MovieItem from \"../../components/movie-item/movie-item\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper\n  },\n  gridList: {\n    width: 500,\n    height: 450\n  },\n  icon: {\n    color: 'rgba(255, 255, 255, 0.54)'\n  }\n}));\n\nclass favMovie extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickHandler = () => {\n      console.log('movieLIst', this.props.movieList);\n    };\n  }\n\n  render() {\n    const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(GridList, {\n      cellHeight: 180,\n      className: classes.gridList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(GridListTile, {\n      key: \"Subheader\",\n      cols: 2,\n      style: {\n        height: 'auto'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      component: \"div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }, \"December\")), tileData.map(tile => /*#__PURE__*/React.createElement(GridListTile, {\n      key: tile.img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: tile.img,\n      alt: tile.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(GridListTileBar, {\n      title: tile.title,\n      subtitle: /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 43\n        }\n      }, \"by: \", tile.author),\n      actionIcon: /*#__PURE__*/React.createElement(IconButton, {\n        \"aria-label\": `info about ${tile.title}`,\n        className: classes.icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(InfoIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 41\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"try\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: URL_IMAGE_PREFIX + this.props.movieList[0][0].poster_path,\n      alt: \"No url for this movie\",\n      title: this.props.movieList[0][0].title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), this.props.movieList.length);\n  }\n\n}\n\nexport default connect(state => ({\n  movieList: state.movieListReducer\n}), {\n  loadNextPageFromDB\n})(favMovie);","map":{"version":3,"sources":["/Users/qingyunwu/su_movielist/popular-moive-app/src/view/favorite-tab/favorite-tab.js"],"names":["React","connect","loadNextPageFromDB","URL_IMAGE_PREFIX","MovieItem","makeStyles","GridList","GridListTile","GridListTileBar","ListSubheader","IconButton","InfoIcon","useStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","height","icon","color","favMovie","Component","clickHandler","console","log","props","movieList","render","classes","tileData","map","tile","img","title","author","poster_path","length","state","movieListReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {loadNextPageFromDB} from \"../../redux/actions\";\nimport {URL_IMAGE_PREFIX} from \"../../constants\";\nimport MovieItem from \"../../components/movie-item/movie-item\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: 500,\n        height: 450,\n    },\n    icon: {\n        color: 'rgba(255, 255, 255, 0.54)',\n    },\n}));\n\n\nclass favMovie extends React.Component {\n\n\n\n    clickHandler = () => {\n        console.log('movieLIst',this.props.movieList)\n    }\n\n    render() {\n        const classes = useStyles();\n\n        return (\n            <div className={classes.root}>\n                <GridList cellHeight={180} className={classes.gridList}>\n                    <GridListTile key=\"Subheader\" cols={2} style={{ height: 'auto' }}>\n                        <ListSubheader component=\"div\">December</ListSubheader>\n                    </GridListTile>\n                    {tileData.map((tile) => (\n                        <GridListTile key={tile.img}>\n                            <img src={tile.img} alt={tile.title} />\n                            <GridListTileBar\n                                title={tile.title}\n                                subtitle={<span>by: {tile.author}</span>}\n                                actionIcon={\n                                    <IconButton aria-label={`info about ${tile.title}`} className={classes.icon}>\n                                        <InfoIcon />\n                                    </IconButton>\n                                }\n                            />\n                        </GridListTile>\n                    ))}\n                </GridList>\n                <button onClick={this.clickHandler}>try</button>\n                <img src={URL_IMAGE_PREFIX + this.props.movieList[0][0].poster_path} alt=\"No url for this movie\" title={this.props.movieList[0][0].title} />\n                {this.props.movieList.length}\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({movieList: state.movieListReducer}),\n    {loadNextPageFromDB}\n)(favMovie);\n\n"]},"metadata":{},"sourceType":"module"}