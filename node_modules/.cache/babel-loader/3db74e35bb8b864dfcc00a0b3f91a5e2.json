{"ast":null,"code":"var _jsxFileName = \"/Users/suguo/Desktop/suguo_hw4/popular-moive-app/src/view/movie-tab/movie-tab.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { loadNextPageFromDB } from \"../../redux/actions\";\nimport { addToFavorite } from \"../../redux/actions\";\nimport { removeFromFavorite } from \"../../redux/actions\";\nimport { addToBlock } from \"../../redux/actions\";\nimport { addCurrentPage } from \"../../redux/actions\";\nimport { deductCurrentPage } from \"../../redux/actions\";\nimport MovieItem from \"../../components/movie-item/movie-item\";\nimport \"./movie-tab.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretSquareLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faCaretSquareRight } from '@fortawesome/free-solid-svg-icons';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport loadingBar from \"../../img/loading.gif\";\n\nclass MovieTab extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      totalPage: this.props.movieList.length,\n      currentPageMovieList: [],\n      showLoadingBar: false\n    };\n\n    this.componentDidMount = () => {\n      const {\n        movieList\n      } = this.props;\n\n      if (movieList.length === 0) {\n        this.setState({\n          showLoadingBar: true\n        });\n        const {\n          loadNextPageFromDB,\n          addCurrentPage\n        } = this.props;\n        loadNextPageFromDB(1);\n        addCurrentPage();\n      } else {\n        const {\n          currentPage\n        } = this.props;\n        this.setState({\n          currentPageMovieList: movieList[currentPage - 1].filter(movieItem => !movieItem.isBlock)\n        });\n      }\n    };\n\n    this.handleButtonNextClick = () => {\n      const {\n        currentPage,\n        addCurrentPage\n      } = this.props;\n      const totalPage = this.props.movieList.length;\n      const nextPage = currentPage + 1;\n      addCurrentPage();\n\n      if (nextPage <= totalPage) {\n        const {\n          movieList\n        } = this.props;\n        this.setState({\n          currentPageMovieList: movieList[nextPage - 1].filter(movieItem => !movieItem.isBlock)\n        });\n      } else {\n        this.setState({\n          showLoadingBar: true\n        });\n        const {\n          loadNextPageFromDB\n        } = this.props;\n        loadNextPageFromDB(nextPage);\n      }\n    };\n\n    this.handleButtonPrevClick = () => {\n      const {\n        currentPage,\n        deductCurrentPage,\n        movieList\n      } = this.props;\n      if (currentPage === 1) return;\n      deductCurrentPage();\n      const prevPage = currentPage - 1;\n      this.setState({\n        currentPageMovieList: movieList[prevPage - 1].filter(movieItem => !movieItem.isBlock)\n      });\n    };\n\n    this.handleButtonReleaseDateClick = () => {\n      let arr = [...this.state.currentPageMovieList];\n      arr.sort(this.sortReleaseDate);\n      this.setState({\n        currentPageMovieList: arr\n      });\n    };\n\n    this.sortReleaseDate = (a, b) => {\n      return Date.parse(b.release_date) - Date.parse(a.release_date);\n    };\n\n    this.handleButtonPopularityClick = () => {\n      let arr = [...this.state.currentPageMovieList];\n      arr.sort(this.sortPopularity);\n      this.setState({\n        currentPageMovieList: arr\n      });\n    };\n\n    this.sortPopularity = (a, b) => b.popularity - a.popularity;\n\n    this.handleButtonAverageScoreClick = () => {\n      let arr = [...this.state.currentPageMovieList];\n      arr.sort(this.sortAverageScore);\n      this.setState({\n        currentPageMovieList: arr\n      });\n    };\n\n    this.sortAverageScore = (a, b) => b.vote_average - a.vote_average;\n\n    this.handleButtonVoteCountClick = () => {\n      let arr = [...this.state.currentPageMovieList];\n      arr.sort(this.sortVoteCount);\n      this.setState({\n        currentPageMovieList: arr\n      });\n    };\n\n    this.sortVoteCount = (a, b) => b.vote_count - a.vote_count;\n\n    this.removeMovieItemFromState = id => {\n      this.setState({\n        currentPageMovieList: this.state.currentPageMovieList.filter(movieItem => movieItem.id !== id)\n      });\n    };\n  }\n\n  render() {\n    const {\n      currentPage,\n      addToFavorite,\n      removeFromFavorite,\n      addToBlock\n    } = this.props;\n    const {\n      currentPageMovieList,\n      showLoadingBar\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }\n    }, \"The Top Rated Movie List\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      onClick: this.handleButtonPrevClick,\n      className: \"icon-arrow\",\n      icon: faCaretSquareLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"middle-bar-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Page \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 64\n      }\n    }, currentPage), \"/500 of 10000 Results\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      onClick: this.handleButtonNextClick,\n      className: \"icon-arrow\",\n      icon: faCaretSquareRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-button-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleButtonReleaseDateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 29\n      }\n    }, \"Release Date\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"icon-sort\",\n      icon: faCaretDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleButtonPopularityClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, \"Popularity\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"icon-sort\",\n      icon: faCaretDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"nav-button-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleButtonAverageScoreClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, \"Average Score\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"icon-sort\",\n      icon: faCaretDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleButtonVoteCountClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, \"Vote Count\", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"icon-sort\",\n      icon: faCaretDown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: showLoadingBar ? \"\" : \"hideElement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-bar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: loadingBar,\n      alt: \"wrong url\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: showLoadingBar ? \"hideElement\" : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-list-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"movie-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 25\n      }\n    }, currentPageMovieList && currentPageMovieList.map(movieItem => /*#__PURE__*/React.createElement(MovieItem, {\n      key: movieItem.id,\n      movieItem: movieItem,\n      removeMovieItemFromState: this.removeMovieItemFromState,\n      addToFavorite: addToFavorite,\n      removeFromFavorite: removeFromFavorite,\n      addToBlock: addToBlock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }))))));\n  }\n\n}\n\nMovieTab.propTypes = {\n  movieList: PropTypes.array.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  loadNextPageFromDB: PropTypes.func.isRequired,\n  addToFavorite: PropTypes.func.isRequired,\n  removeFromFavorite: PropTypes.func.isRequired,\n  addToBlock: PropTypes.func.isRequired,\n  addCurrentPage: PropTypes.func.isRequired,\n  deductCurrentPage: PropTypes.func.isRequired\n};\n\nMovieTab.getDerivedStateFromProps = (props, state) => {\n  const totalPageInState = state.totalPage;\n  const totalPageInStore = props.movieList.length; // load first/new page\n\n  if (totalPageInState < totalPageInStore) {\n    return {\n      currentPage: totalPageInStore,\n      totalPage: totalPageInStore,\n      currentPageMovieList: props.movieList[totalPageInStore - 1],\n      showLoadingBar: false\n    };\n  }\n\n  return null;\n};\n\nexport default connect(state => ({\n  movieList: state.movieListReducer,\n  currentPage: state.currentPageReducer\n}), {\n  loadNextPageFromDB,\n  addToFavorite,\n  removeFromFavorite,\n  addToBlock,\n  addCurrentPage,\n  deductCurrentPage\n})(MovieTab);","map":{"version":3,"sources":["/Users/suguo/Desktop/suguo_hw4/popular-moive-app/src/view/movie-tab/movie-tab.js"],"names":["React","connect","PropTypes","loadNextPageFromDB","addToFavorite","removeFromFavorite","addToBlock","addCurrentPage","deductCurrentPage","MovieItem","FontAwesomeIcon","faCaretSquareLeft","faCaretSquareRight","faCaretDown","loadingBar","MovieTab","Component","state","totalPage","props","movieList","length","currentPageMovieList","showLoadingBar","componentDidMount","setState","currentPage","filter","movieItem","isBlock","handleButtonNextClick","nextPage","handleButtonPrevClick","prevPage","handleButtonReleaseDateClick","arr","sort","sortReleaseDate","a","b","Date","parse","release_date","handleButtonPopularityClick","sortPopularity","popularity","handleButtonAverageScoreClick","sortAverageScore","vote_average","handleButtonVoteCountClick","sortVoteCount","vote_count","removeMovieItemFromState","id","render","map","propTypes","array","isRequired","number","func","getDerivedStateFromProps","totalPageInState","totalPageInStore","movieListReducer","currentPageReducer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {loadNextPageFromDB} from \"../../redux/actions\";\nimport {addToFavorite} from \"../../redux/actions\";\nimport {removeFromFavorite} from \"../../redux/actions\";\nimport {addToBlock} from \"../../redux/actions\";\nimport {addCurrentPage} from \"../../redux/actions\";\nimport {deductCurrentPage} from \"../../redux/actions\";\nimport MovieItem from \"../../components/movie-item/movie-item\";\nimport \"./movie-tab.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretSquareLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faCaretSquareRight } from '@fortawesome/free-solid-svg-icons';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport loadingBar from \"../../img/loading.gif\";\n\nclass MovieTab extends React.Component {\n\n    static propTypes = {\n        movieList: PropTypes.array.isRequired,\n        currentPage: PropTypes.number.isRequired,\n        loadNextPageFromDB: PropTypes.func.isRequired,\n        addToFavorite: PropTypes.func.isRequired,\n        removeFromFavorite: PropTypes.func.isRequired,\n        addToBlock: PropTypes.func.isRequired,\n        addCurrentPage: PropTypes.func.isRequired,\n        deductCurrentPage: PropTypes.func.isRequired,\n    }\n\n    state = {\n        totalPage: this.props.movieList.length,\n        currentPageMovieList: [],\n        showLoadingBar: false,\n    }\n\n    static getDerivedStateFromProps = (props, state) => {\n        const totalPageInState = state.totalPage;\n        const totalPageInStore = props.movieList.length;\n        // load first/new page\n        if(totalPageInState < totalPageInStore) {\n            return {\n                currentPage: totalPageInStore,\n                totalPage: totalPageInStore,\n                currentPageMovieList: props.movieList[totalPageInStore - 1],\n                showLoadingBar: false,\n            }\n        }\n        return null;\n    }\n\n    componentDidMount = () => {\n        const {movieList} = this.props;\n        if(movieList.length === 0) {\n            this.setState({\n                showLoadingBar: true,\n            });\n            const {loadNextPageFromDB, addCurrentPage} = this.props;\n            loadNextPageFromDB(1);\n            addCurrentPage();\n        }\n        else {\n            const {currentPage} = this.props;\n            this.setState({\n                currentPageMovieList: movieList[currentPage - 1].filter((movieItem) => !movieItem.isBlock),\n            })\n        }\n    }\n\n    handleButtonNextClick = () => {\n        const {currentPage, addCurrentPage} = this.props;\n        const totalPage = this.props.movieList.length;\n        const nextPage = currentPage + 1;\n        addCurrentPage();\n        if(nextPage <= totalPage) {\n            const {movieList} = this.props;\n            this.setState({\n                currentPageMovieList: movieList[nextPage - 1].filter((movieItem) => !movieItem.isBlock),\n            })\n        }\n        else {\n            this.setState({\n                showLoadingBar: true,\n            })\n            const {loadNextPageFromDB} = this.props;\n            loadNextPageFromDB(nextPage);\n        }\n    }\n\n    handleButtonPrevClick = () => {\n        const {currentPage, deductCurrentPage, movieList} = this.props;\n        if(currentPage === 1) return;\n        deductCurrentPage();\n        const prevPage = currentPage - 1;\n        this.setState({\n            currentPageMovieList: movieList[prevPage - 1].filter((movieItem) => !movieItem.isBlock),\n        });\n    }\n\n    handleButtonReleaseDateClick = () => {\n        let arr = [...this.state.currentPageMovieList];\n        arr.sort(this.sortReleaseDate);\n        this.setState({\n            currentPageMovieList: arr,\n        });\n    }\n\n    sortReleaseDate = (a, b) => {\n        return Date.parse(b.release_date) - Date.parse(a.release_date);\n    }\n\n    handleButtonPopularityClick = () => {\n        let arr = [...this.state.currentPageMovieList];\n        arr.sort(this.sortPopularity);\n        this.setState({\n            currentPageMovieList: arr,\n        });\n    }\n\n    sortPopularity = (a, b) => (b.popularity - a.popularity);\n    \n    handleButtonAverageScoreClick = () => {\n        let arr = [...this.state.currentPageMovieList];\n        arr.sort(this.sortAverageScore);\n        this.setState({\n            currentPageMovieList: arr,\n        });\n    }\n\n    sortAverageScore = (a, b) => (b.vote_average - a.vote_average);\n\n    handleButtonVoteCountClick = () => {\n        let arr = [...this.state.currentPageMovieList];\n        arr.sort(this.sortVoteCount);\n        this.setState({\n            currentPageMovieList: arr,\n        });\n    }\n\n    sortVoteCount = (a, b) => (b.vote_count - a.vote_count);\n\n    removeMovieItemFromState = (id) => {\n        this.setState({\n            currentPageMovieList: this.state.currentPageMovieList.filter((movieItem) => movieItem.id !== id),\n        });\n    }\n\n    render() {\n        const {currentPage, addToFavorite, removeFromFavorite, addToBlock} = this.props;\n        const {currentPageMovieList, showLoadingBar} = this.state;\n        return (\n            <div className=\"page\">\n                <div className=\"nav-bar\">\n                    <h1>The Top Rated Movie List</h1>\n                    <div className=\"middle-bar\">\n                        <FontAwesomeIcon onClick={this.handleButtonPrevClick} className=\"icon-arrow\" icon={faCaretSquareLeft} />\n                        <div className=\"middle-bar-title\">Page <span>{currentPage}</span>/500 of 10000 Results</div>\n                        <FontAwesomeIcon onClick={this.handleButtonNextClick} className=\"icon-arrow\" icon={faCaretSquareRight} />\n                    </div>\n                    <div className=\"nav-button\">\n                        <div className=\"nav-button-wrapper\">\n                            <button onClick={this.handleButtonReleaseDateClick}>\n                                Release Date\n                                <FontAwesomeIcon className=\"icon-sort\" icon={faCaretDown} />\n                            </button>\n                            <button onClick={this.handleButtonPopularityClick}>\n                                Popularity\n                                <FontAwesomeIcon className=\"icon-sort\" icon={faCaretDown} />\n                            </button>\n                        </div>\n                        <div className=\"nav-button-wrapper\">\n                            <button onClick={this.handleButtonAverageScoreClick}>\n                                Average Score\n                                <FontAwesomeIcon className=\"icon-sort\" icon={faCaretDown} />\n                            </button>\n                            <button onClick={this.handleButtonVoteCountClick}>\n                                Vote Count\n                                <FontAwesomeIcon className=\"icon-sort\" icon={faCaretDown} />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <div className={showLoadingBar?\"\":\"hideElement\"}>\n                    <div className=\"loading-bar\">\n                        <img src={loadingBar} alt=\"wrong url\" />\n                    </div>\n                </div>\n                \n                <div className={showLoadingBar?\"hideElement\":\"\"}>\n                    <div className=\"movie-list-wrapper\">\n                        <ul className=\"movie-list\">\n                            {currentPageMovieList && currentPageMovieList.map((movieItem) => \n                            <MovieItem key={movieItem.id} movieItem={movieItem} removeMovieItemFromState={this.removeMovieItemFromState}\n                            addToFavorite={addToFavorite} removeFromFavorite={removeFromFavorite} addToBlock={addToBlock} />)}\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default connect(\n    state => ({movieList: state.movieListReducer, currentPage: state.currentPageReducer}), \n    {loadNextPageFromDB, addToFavorite, removeFromFavorite, addToBlock, addCurrentPage, deductCurrentPage}\n)(MovieTab);\n"]},"metadata":{},"sourceType":"module"}